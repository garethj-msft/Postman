{
  "info": {
    "_postman_id": "b0ea17f4-2fbd-1a0f-7ec6-9519d1b3a70b",
    "name": "EduFacadeCoreTests",
    "description": "Core suite of integration tests for Rostering API on Microsoft Graph. Expected to pass 100% on 3 iterations.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Setup",
      "item": [
        {
          "name": "T_InitializeScripts",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "60bf0268-68c6-4ff8-82b2-8281054b3ef7",
                "exec": [
                  "pm.environment.set(\"RequestDelay\", 20000); // Default delay for propagation\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"retryCount\", \"0\");\r",
                  "postman.setEnvironmentVariable(\"retryDelay\", \"3\");\r",
                  "var authRandom = Math.floor(Math.random() * 10);\r",
                  "\r",
                  "if (postman.getEnvironmentVariable(\"authOverride\") === \"appOnly\" || (authRandom < 5 && postman.getEnvironmentVariable(\"authOverride\") !== \"appPlusUser\")) {\r",
                  "  postman.setEnvironmentVariable(\"authType\", 'appOnly');\r",
                  "  console.log(\"Running App-Only.\");\r",
                  "}\r",
                  "else {\r",
                  "  postman.setEnvironmentVariable(\"authType\", 'appPlusUser');\r",
                  "  console.log(\"Running App+User.\");\r",
                  "}\r",
                  "\r",
                  "if (iteration === 0) {\r",
                  "  // Remember the initial authType so we can switch on later iterations\r",
                  "  postman.setEnvironmentVariable(\"firstAuthType\", postman.getEnvironmentVariable(\"authType\"));\r",
                  "}\r",
                  "if (iteration >= 3) {\r",
                  "  // Switch auth types on iterations 3-6\r",
                  "  if (postman.getEnvironmentVariable(\"firstAuthType\") === 'appOnly') {\r",
                  "    postman.setEnvironmentVariable(\"authType\", \"appPlusUser\");\r",
                  "  }\r",
                  "  else {\r",
                  "    postman.setEnvironmentVariable(\"authType\", \"appOnly\");\r",
                  "  }\r",
                  "}\r",
                  "\r",
                  "GlobalFunctions = {\r",
                  "  setupMetadataLevel: function (iteration, postman) {\r",
                  "    if (iteration % 3 === 0) {\r",
                  "      postman.setEnvironmentVariable(\"MetadataLevel\", \"none\");\r",
                  "    }\r",
                  "    else if (iteration % 3 === 1) {\r",
                  "      postman.setEnvironmentVariable(\"MetadataLevel\", \"minimal\");\r",
                  "    }\r",
                  "    else if (iteration % 3 === 2) {\r",
                  "      postman.setEnvironmentVariable(\"MetadataLevel\", \"full\");\r",
                  "    }\r",
                  "  },\r",
                  "  retryTest: function (requestName, testName, postman, tests) {\r",
                  "    var retryString = postman.getEnvironmentVariable(\"retryCount\");\r",
                  "    if (retryString === null || retryString === \"\") {\r",
                  "      retryString = \"0\";\r",
                  "    }\r",
                  "    var retryCount = parseInt(retryString);\r",
                  "    retryCount++;\r",
                  "    postman.setEnvironmentVariable(\"retryCount\", retryCount);\r",
                  "    if (retryCount < 16) {\r",
                  "      postman.setEnvironmentVariable(\"returnRequest\", requestName);\r",
                  "      postman.setNextRequest(\"Delay\");\r",
                  "      console.log(\"retry iteration \" + retryCount);\r",
                  "    }\r",
                  "    else {\r",
                  "      postman.setEnvironmentVariable(\"retryCount\", \"0\");\r",
                  "      tests[testName] = false;\r",
                  "    }\r",
                  "  },\r",
                  "  delayBefore: function (requestName, postman) {\r",
                  "    postman.setEnvironmentVariable(\"returnRequest\", requestName);\r",
                  "    postman.setNextRequest(\"Delay\");\r",
                  "  },\r",
                  "  reportFails: function (tests, responseCode, responseBody) {\r",
                  "    var anyFalse = false;\r",
                  "    for (var name in tests) {\r",
                  "      if (tests.hasOwnProperty(name) && tests[name] === false) {\r",
                  "        anyFalse = true;\r",
                  "        break;\r",
                  "      }\r",
                  "    }\r",
                  "    if (anyFalse === true) {\r",
                  "      console.log(\"Failure response:\");\r",
                  "      console.log(responseCode);\r",
                  "      console.log(responseBody);\r",
                  "    }\r",
                  "  },\r",
                  "  pauseSeconds: function (seconds) {\r",
                  "    var millis = seconds * 1000;\r",
                  "    var date = new Date();\r",
                  "    var curDate = null;\r",
                  "    do { curDate = new Date(); }\r",
                  "    while (curDate - date < millis);\r",
                  "  }\r",
                  "};"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "6a2cb93f-d2c4-4488-8202-307e57480b67",
                "exec": [
                  "tests[\"GlobalsInitialized\"] = typeof(GlobalFunctions) !== 'undefined';",
                  "tests[postman.getEnvironmentVariable(\"authType\")] = true; ",
                  "GlobalFunctions.reportFails(tests);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "e3e41bd2-5185-b890-2863-0998afafde85",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "https://postman-echo.com/get"
          },
          "response": []
        },
        {
          "name": "T_AppOnlyToken GraphNonEdu",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Successful Request\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200)",
                  "{",
                  "    var data = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                  "    tests[\"New app-only nonEdu token written to environment\"] = true;",
                  "}"
                ]
              }
            }
          ],
          "id": "5ff04927-a10b-1e44-f9e7-f3e42234ede0",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                },
                {
                  "key": "client_id",
                  "value": "{{GraphClientIdNonEdu}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{GraphSecretNonEdu}}",
                  "type": "text"
                },
                {
                  "key": "resource",
                  "value": "{{loginResource}}",
                  "type": "text"
                }
              ]
            },
            "url": "https://{{loginHost}}/{{tenantDomain}}/oauth2/token"
          },
          "response": []
        },
        {
          "name": "FIND A non-education Group",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (typeof(GlobalFunctions) !== 'undefined' )",
                  "{",
                  "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "tests[\"noneducationgroup found\"] = responseBody.has(\"noneducationgroup\");",
                  "if (responseBody.has('noneducationgroup'))",
                  "{",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var i;",
                  "    for (i=0; i < jsonData.value.length; i++)",
                  "    {",
                  "        if (jsonData.value[i].displayName ===  'noneducationgroup')",
                  "        {",
                  "            console.log(\"noneducationgroup id: \" + jsonData.value[i].id)",
                  "            postman.setEnvironmentVariable(\"nonEducationGroupId\", jsonData.value[i].id)",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "id": "1ef254ee-60e0-9dd3-394a-1200a6f78533",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{GraphAuth}}"
              },
              {
                "key": "Workload-Authorization",
                "value": "{{AADAuth}}",
                "disabled": true
              },
              {
                "key": "Accept",
                "value": "application/json;odata.metadata={{MetadataLevel}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \"@odata.type\":\"microsoft.graph.group\",\n   \"displayName\":\"GarethClass28\",\n   \"mailNickname\":\"class282\",\n   \"mailEnabled\":true,\n   \"securityEnabled\":false,\n   \"extension_fe2174665583431c953114ff7268b7b3_Education_Period\":\"5\",\n   \"groupTypes\":[\"Unified\"]}"
            },
            "url": {
              "raw": "{{https}}://{{host}}/{{graphVersion}}/groups?$filter=displayName eq 'noneducationgroup'",
              "protocol": "{{https}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{graphVersion}}",
                "groups"
              ],
              "query": [
                {
                  "key": "$filter",
                  "value": "displayName eq 'noneducationgroup'"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "FIND A non-education User",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (typeof(GlobalFunctions) !== 'undefined' )",
                  "{",
                  "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "tests[\"noneducationuser found\"] = responseBody.has(\"SchoolAdministrator\");",
                  "if (responseBody.has('SchoolAdministrator'))",
                  "{",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var i;",
                  "    for (i=0; i < jsonData.value.length; i++)",
                  "    {",
                  "        if (jsonData.value[i].displayName ===  'SchoolAdministrator')",
                  "        {",
                  "            console.log(\"noneducationuser id: \" + jsonData.value[i].id)",
                  "            postman.setEnvironmentVariable(\"nonEducationUserId\", jsonData.value[i].id)",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "id": "deaf595e-0df4-c402-960f-f3cacb89cc7f",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{GraphAuth}}"
              },
              {
                "key": "Workload-Authorization",
                "value": "{{AADAuth}}",
                "disabled": true
              },
              {
                "key": "Accept",
                "value": "application/json;odata.metadata={{MetadataLevel}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \"@odata.type\":\"microsoft.graph.group\",\n   \"displayName\":\"GarethClass28\",\n   \"mailNickname\":\"class282\",\n   \"mailEnabled\":true,\n   \"securityEnabled\":false,\n   \"extension_fe2174665583431c953114ff7268b7b3_Education_Period\":\"5\",\n   \"groupTypes\":[\"Unified\"]}"
            },
            "url": {
              "raw": "{{https}}://{{host}}/{{graphVersion}}/users?$filter=displayName eq 'SchoolAdministrator'",
              "protocol": "{{https}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{graphVersion}}",
                "users"
              ],
              "query": [
                {
                  "key": "$filter",
                  "value": "displayName eq 'SchoolAdministrator'"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "FIND PrimaryTestClass",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (typeof(GlobalFunctions) !== 'undefined' )",
                  "{",
                  "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "tests[\"Classes found\"] = responseBody.has('\"id\":')",
                  "if (!responseBody.has('\"PrimaryTestClass\"'))",
                  "{",
                  "    tests[\"Class named PrimaryTestClass required\"] = false;",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  "if (responseBody.has('\"id\":'))",
                  "{",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var i;",
                  "    for (i=0; i < jsonData.value.length; i++)",
                  "    {",
                  "        if (jsonData.value[i].displayName ===  'PrimaryTestClass')",
                  "        {",
                  "            console.log(\"Primary test class id: \" + jsonData.value[i].id)",
                  "            postman.setEnvironmentVariable(\"primaryTestClassId\", jsonData.value[i].id)",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "id": "cd6b2880-4ae7-1851-c592-8afa24307f3c",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{GraphAuth}}"
              },
              {
                "key": "Workload-Authorization",
                "value": "{{AADAuth}}",
                "disabled": true
              },
              {
                "key": "Accept",
                "value": "application/json;odata.metadata={{MetadataLevel}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{https}}://{{host}}/{{graphVersion}}/groups?$filter=displayName eq 'PrimaryTestClass'",
              "protocol": "{{https}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{graphVersion}}",
                "groups"
              ],
              "query": [
                {
                  "key": "$filter",
                  "value": "displayName eq 'PrimaryTestClass'"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "FIND PrimaryTestSchool",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (typeof(GlobalFunctions) !== 'undefined' )",
                  "{",
                  "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "tests[\"Schools found\"] = responseBody.has('\"id\":')",
                  "if (!responseBody.has('\"PrimaryTestSchool\"'))",
                  "{",
                  "    tests[\"School named PrimaryTestSchool required\"] = false;",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  "if (responseBody.has('\"id\":'))",
                  "{",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var i;",
                  "    for (i=0; i < jsonData.value.length; i++)",
                  "    {",
                  "        if (jsonData.value[i].displayName ===  'PrimaryTestSchool')",
                  "        {",
                  "            console.log(\"Primary test school id: \" + jsonData.value[i].id)",
                  "            postman.setEnvironmentVariable(\"primaryTestSchoolId\", jsonData.value[i].id)",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "id": "0ec4b95d-18b5-a183-3746-798f25376d79",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{GraphAuth}}"
              },
              {
                "key": "Workload-Authorization",
                "value": "{{AADAuth}}",
                "disabled": true
              },
              {
                "key": "Accept",
                "value": "application/json;odata.metadata={{MetadataLevel}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{https}}://{{host}}/beta/administrativeUnits?$filter=displayName eq 'PrimaryTestSchool'",
              "protocol": "{{https}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "beta",
                "administrativeUnits"
              ],
              "query": [
                {
                  "key": "$filter",
                  "value": "displayName eq 'PrimaryTestSchool'"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "FIND PrimaryTestUser",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (typeof(GlobalFunctions) !== 'undefined' )",
                  "{",
                  "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "tests[\"User found\"] = responseBody.has('\"id\":')",
                  "if (!responseBody.has('\"PrimaryTestUser\"'))",
                  "{",
                  "    tests[\"User named PrimaryTestUser required\"] = false;",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  "if (responseBody.has('\"id\":'))",
                  "{",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var i;",
                  "    for (i=0; i < jsonData.value.length; i++)",
                  "    {",
                  "        if (jsonData.value[i].displayName ===  'PrimaryTestUser')",
                  "        {",
                  "            console.log(\"Primary test user id: \" + jsonData.value[i].id)",
                  "            postman.setEnvironmentVariable(\"primaryTestUserId\", jsonData.value[i].id)",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "id": "6c790bcf-e5cd-a3ba-f52c-87af603ad5d0",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{GraphAuth}}"
              },
              {
                "key": "Workload-Authorization",
                "value": "{{AADAuth}}",
                "disabled": true
              },
              {
                "key": "Accept",
                "value": "application/json;odata.metadata={{MetadataLevel}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{https}}://{{host}}/{{graphVersion}}/users?$filter=displayName eq 'PrimaryTestUser'",
              "protocol": "{{https}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{graphVersion}}",
                "users"
              ],
              "query": [
                {
                  "key": "$filter",
                  "value": "displayName eq 'PrimaryTestUser'"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "FIND SecondaryTestUser",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (typeof(GlobalFunctions) !== 'undefined' )",
                  "{",
                  "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "tests[\"User found\"] = responseBody.has('\"id\":')",
                  "",
                  "if (responseBody.has('\"id\":'))",
                  "{",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var i;",
                  "    for (i=0; i < jsonData.value.length; i++)",
                  "    {",
                  "        if (jsonData.value[i].displayName !== 'PrimaryTestUser' &&",
                  "            jsonData.value[i].extension_fe2174665583431c953114ff7268b7b3_Education_ObjectType !== null)",
                  "        {",
                  "            console.log(\"Secondary test user id: \" + jsonData.value[i].id);",
                  "            console.log(\"Secondary test user name: \" + jsonData.value[i].displayName);",
                  "            postman.setEnvironmentVariable(\"secondaryTestUserId\", jsonData.value[i].id);",
                  "            break;",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "id": "27902a19-da1a-4103-32d6-6a240023e61c",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{GraphAuth}}"
              },
              {
                "key": "Workload-Authorization",
                "value": "{{AADAuth}}",
                "disabled": true
              },
              {
                "key": "Accept",
                "value": "application/json;odata.metadata={{MetadataLevel}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "url": "{{https}}://{{host}}/beta/users"
          },
          "response": []
        }
      ],
      "id": "0ae107f0-7101-45f6-8b8b-961abc83ecaa"
    },
    {
      "name": "ReadBasic",
      "item": [
        {
          "name": "Auth",
          "item": [
            {
              "name": "T_PreReadBasic",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "59b746fe-89ac-42be-8b2b-3c2d2a29d96c",
                    "exec": [
                      "postman.setEnvironmentVariable(\"GraphAuth\", \"\");\r",
                      "var authType = postman.getEnvironmentVariable(\"authType\");\r",
                      "if (authType === 'appOnly')\r",
                      "{\r",
                      "    postman.setEnvironmentVariable(\"expectedSuccess\", false);\r",
                      "    postman.setNextRequest(\"T_AppOnlyToken GraphReadBasic\");\r",
                      "}\r",
                      "else\r",
                      "{\r",
                      "    postman.setEnvironmentVariable(\"expectedSuccess\", true);\r",
                      "    postman.setNextRequest(\"T_AppPlusUserToken GraphReadBasic\");\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "46d8d2aa-f4cc-0f81-1b7e-86919adcf612",
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "T_AppPlusUserToken GraphReadBasic",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b09647cf-b7eb-464b-b020-6edbffc19837",
                    "exec": [
                      "postman.setNextRequest(\"T_PostReadBasic\");"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "86161bc1-ecd3-4dc1-949d-5881fa6a82b3",
                    "exec": [
                      "tests[\"Successful Request\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200)",
                      "{",
                      "    var data = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                      "    tests[\"New readbasic tokens written to environment\"] = true;",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "4be741a9-7cd6-0bad-2921-6021297a3970",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{GraphClientIdReadBasic}}",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{GraphSecretReadBasic}}",
                      "type": "text"
                    },
                    {
                      "key": "resource",
                      "value": "{{loginResource}}",
                      "type": "text"
                    },
                    {
                      "key": "username",
                      "value": "{{apiCaller}}",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "{{apiCallerPwd}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://{{loginHost}}/common/oauth2/token"
              },
              "response": []
            },
            {
              "name": "T_AppOnlyToken GraphReadBasic",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "94a5401d-3b6a-4f0e-beb7-fd51b8328666",
                    "exec": [
                      "postman.setNextRequest(\"T_PostReadBasic\");"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "caefe05d-e0df-4435-92c3-36b80fbf57d8",
                    "exec": [
                      "tests[\"Successful Request\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200)",
                      "{",
                      "    var data = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                      "    tests[\"New app-only readbasic token written to environment\"] = true;",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7ce03215-3584-1f9c-ed51-785c213fc2b2",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{GraphClientIdReadBasic}}",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{GraphSecretReadBasic}}",
                      "type": "text"
                    },
                    {
                      "key": "resource",
                      "value": "{{loginResource}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://{{loginHost}}/{{tenantDomain}}/oauth2/token"
              },
              "response": []
            },
            {
              "name": "T_PostReadBasic",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var auth = postman.getEnvironmentVariable(\"GraphAuth\");",
                      "tests[\"Auth token acquired.\"] = (auth.length > 10);",
                      ""
                    ]
                  }
                }
              ],
              "id": "d84dbf93-3a36-4abe-7ebf-5cb1779c6fca",
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "https://postman-echo.com/get"
              },
              "response": []
            }
          ],
          "id": "9294f44f-26a7-4b5d-962c-020094962b29"
        },
        {
          "name": "Infrastructure",
          "item": [
            {
              "name": "Get Specific Version",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2cb0764-df39-4b5e-80b8-558a32de81b7",
                    "exec": [
                      "// Removed due to changes to canary (you can't poll versions)",
                      "// {{https}}://{{host}}/versions/{{graphVersion}}",
                      "//tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "// Note no 's' on the end of the workload name because the case differs in canary and prod :-(",
                      "//tests[\"Rostering deployed\"] = responseBody.has('EducationRosteringAPI');  ",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "f4483d10-ff4a-41d6-8fc8-81774cd6694b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  }
                ],
                "url": "{{https}}://{{host}}/versions/"
              },
              "response": []
            },
            {
              "name": "Get Metadata",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "id": "19f61e0d-2fdd-47cd-9768-ffcfe17f3a68",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/$metadata"
              },
              "response": []
            },
            {
              "name": "Get Education",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Expected fail\"] = responseCode.code === 400;"
                    ]
                  }
                }
              ],
              "id": "9aff2892-0b0c-4015-b9f1-396bf2d68c36",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education"
              },
              "response": []
            }
          ],
          "id": "3685b634-0677-4f15-a73a-a92f1aaf27a7"
        },
        {
          "name": "School",
          "item": [
            {
              "name": "Get Schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7d740648-00ed-4123-8d40-d6a5956102ab",
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "6689f920-0607-4ea2-946a-0d7c6759955c",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools found\"] = responseBody.has('\"id\":');",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}",
                      "console.log(pm.response.headers.get('x-ms-ags-diagnostic'));"
                    ]
                  }
                }
              ],
              "id": "162ab4d2-c675-5f33-94ce-12e549a81ddb",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools"
              },
              "response": []
            },
            {
              "name": "Get Schools with Filter",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools found\"] = responseBody.has('\"id\":');",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "493db0b7-539e-df98-6414-8f3205d9572c",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/schools?$filter=displayName eq 'PrimaryTestSchool' ",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "schools"
                  ],
                  "query": [
                    {
                      "key": "$filter",
                      "value": "displayName eq 'PrimaryTestSchool' "
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Schools Expand Classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes returned\"] = responseBody.has('classes\":[{'); ",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "3768f179-d806-9d9e-ffa3-ec899523cb44",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/schools?$expand=classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "schools"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A School",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "6a6fea18-3383-f25c-a2a7-d70ba23d2ecc",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  },
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{primaryTestSchoolId}}"
              },
              "response": []
            },
            {
              "name": "Get A School Expand Classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes returned\"] = responseBody.has('classes\":[{');",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "8a8f08d3-6e2c-e9ca-acac-7c8fa69dd0cb",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{primaryTestSchoolId}}?$expand=classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "schools",
                    "{{primaryTestSchoolId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A School Nav Classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes returned\"] = responseBody.has('value\":[{');",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "3f199f54-e22e-afdd-34c6-869c490b36ac",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{primaryTestSchoolId}}/classes"
              },
              "response": []
            },
            {
              "name": "FAIL Get A School Nav Users",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "eb9b1ec2-434a-4e33-8229-583635155af7",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fc07c654-9d41-4027-8104-2271f38a6081",
                    "exec": [
                      "tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7230927a-4a3f-45fe-b1c3-ef44d579cf94",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{primaryTestSchoolId}}/users"
              },
              "response": []
            }
          ],
          "id": "9d2ad746-9b64-4eca-a45e-67d12d0234a8"
        },
        {
          "name": "Class",
          "item": [
            {
              "name": "Get Classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e245a769-844b-4d84-a5d7-5dcb80e7a227",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "e2de357a-d195-403a-9ee5-68656f136684",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes found\"] = responseBody.has('\"id\":')",
                      "if (!responseBody.has('\"PrimaryTestClass\"'))",
                      "{",
                      "    tests[\"Class named PrimaryTestClass required\"] = false;",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      "if (responseBody.has('\"id\":'))",
                      "{",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var i;",
                      "    for (i=0; i < jsonData.value.length; i++)",
                      "    {",
                      "        if (jsonData.value[i].displayName ===  'PrimaryTestClass')",
                      "        {",
                      "            console.log(\"Primary test class id: \" + jsonData.value[i].id)",
                      "            postman.setEnvironmentVariable(\"primaryTestClassId\", jsonData.value[i].id)",
                      "        }",
                      "    }",
                      "    postman.setEnvironmentVariable(\"odataNextLink\", jsonData[\"@odata.nextLink\"]);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c7258513-b673-b30c-0a6e-51638fbfa9e5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes"
              },
              "response": []
            },
            {
              "name": "T_PreNext",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "01420c56-d60a-4644-b007-48d4f08ac1de",
                    "exec": [
                      "var authType = postman.getEnvironmentVariable(\"authType\");\r",
                      "if (pm.environment.get(\"odataNextLink\") === null)\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_PostNext\");\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "02e50a34-c674-4378-a898-f491016bee99",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "Get Classes NEXT",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3c14d0dc-5688-4a7c-97df-5556a0e4306c",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "22d84b7f-a8ce-4ed9-9a5a-42bc2e3477b5",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes found\"] = responseBody.has('\"id\":')",
                      "if (!responseBody.has('\"PrimaryTestClass\"'))",
                      "{",
                      "    tests[\"Class named PrimaryTestClass required\"] = false;",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      "if (responseBody.has('\"id\":'))",
                      "{",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var i;",
                      "    for (i=0; i < jsonData.value.length; i++)",
                      "    {",
                      "        if (jsonData.value[i].displayName ===  'PrimaryTestClass')",
                      "        {",
                      "            console.log(\"Primary test class id: \" + jsonData.value[i].id)",
                      "            postman.setEnvironmentVariable(\"primaryTestClassId\", jsonData.value[i].id)",
                      "        }",
                      "    }",
                      "    postman.setEnvironmentVariable(\"odataNextLink\", jsonData[\"@odata.nextLink\"]);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "36a37417-30f0-4d75-a0a8-86ad644dd2b3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{odataNextLink}}"
              },
              "response": []
            },
            {
              "name": "T_PostNext",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ec98aa77-1188-4d25-b7f7-a00b751a17c7",
                    "exec": [
                      "// Just a placeholder."
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "4efd5626-a048-47a9-b99e-da62cfe050af",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "Get Classes TOP",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "77243be0-f896-4c95-84ad-86b94a372290",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9d6c9bad-8f95-41f5-a7da-a62385b72b47",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes found\"] = responseBody.has('\"id\":')",
                      "if (!responseBody.has('\"PrimaryTestClass\"'))",
                      "{",
                      "    tests[\"Class named PrimaryTestClass required\"] = false;",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      "if (responseBody.has('\"id\":'))",
                      "{",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var i;",
                      "    for (i=0; i < jsonData.value.length; i++)",
                      "    {",
                      "        if (jsonData.value[i].displayName ===  'PrimaryTestClass')",
                      "        {",
                      "            console.log(\"Primary test class id: \" + jsonData.value[i].id)",
                      "            postman.setEnvironmentVariable(\"primaryTestClassId\", jsonData.value[i].id)",
                      "        }",
                      "    }",
                      "    postman.setEnvironmentVariable(\"odataNextLink\", jsonData[\"@odata.nextLink\"]);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "12b87a59-015b-415a-9e6d-03d04f4a9301",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/classes?$top=10",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "classes"
                  ],
                  "query": [
                    {
                      "key": "$top",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Classes with Filter",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes found\"] = responseBody.has('\"id\":')"
                    ]
                  }
                }
              ],
              "id": "57334215-7b1e-a78c-b980-8f2c2cc04ba0",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/classes?$filter=displayName eq 'PrimaryTestClass' and mailNickname eq 'PrimaryTestClass'",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "classes"
                  ],
                  "query": [
                    {
                      "key": "$filter",
                      "value": "displayName eq 'PrimaryTestClass' and mailNickname eq 'PrimaryTestClass'"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Classes Expand Members",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Members returned\"] = responseBody.has('members\":[{'); "
                    ]
                  }
                }
              ],
              "id": "3974403b-78a9-eb74-b476-04cdb18935ce",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/classes?$expand=members",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "classes"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "members"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Classes Expand Teachers",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Teachers returned\"] = responseBody.has('teachers\":[{'); "
                    ]
                  }
                }
              ],
              "id": "4349e9e9-2746-4ad7-fad8-b189479db85f",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/classes?$expand=teachers",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "classes"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "teachers"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Classes Expand Schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools returned\"] = responseBody.has('schools\":[{'); "
                    ]
                  }
                }
              ],
              "id": "53ad3705-0d5c-6179-9dce-ddd5de2565ce",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/classes?$expand=schools",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "classes"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "schools"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "id": "32b7b07a-9c9c-a55a-c14c-941f284e47c7",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{primaryTestClassId}}"
              },
              "response": []
            },
            {
              "name": "Get A Class Expand Members",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Members returned\"] = responseBody.has('members\":[{'); "
                    ]
                  }
                }
              ],
              "id": "56b5c966-7fad-2430-978a-2f9f7f073142",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{primaryTestClassId}}?$expand=members",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "classes",
                    "{{primaryTestClassId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "members"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A Class Expand Teachers",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Teachers returned\"] = responseBody.has('teachers\":[{'); "
                    ]
                  }
                }
              ],
              "id": "1522d920-7c80-e492-89e5-60697556714f",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{primaryTestClassId}}?$expand=teachers",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "classes",
                    "{{primaryTestClassId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "teachers"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A Class Expand Schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools returned\"] = responseBody.has('schools\":[{'); "
                    ]
                  }
                }
              ],
              "id": "5ec1ce4e-1fda-77d6-f487-019b432b34d0",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{primaryTestClassId}}?$expand=schools",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "classes",
                    "{{primaryTestClassId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "schools"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A Class Nav Members",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Members returned\"] = responseBody.has('value\":[{')"
                    ]
                  }
                }
              ],
              "id": "1a70c82d-3d92-448a-63d5-3cafb6e39f29",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{primaryTestClassId}}/members"
              },
              "response": []
            },
            {
              "name": "Get A Class Nav Teachers",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Teachers returned\"] = responseBody.has('value\":[{')"
                    ]
                  }
                }
              ],
              "id": "eee14bab-d77c-9f33-5c2c-0f97dcd09527",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{primaryTestClassId}}/teachers"
              },
              "response": []
            },
            {
              "name": "Get A Class Nav Schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools returned\"] = responseBody.has('value\":[{')"
                    ]
                  }
                }
              ],
              "id": "471cbb92-1061-49c0-aaf4-7ccd324c82e8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{primaryTestClassId}}/schools"
              },
              "response": []
            },
            {
              "name": "GET A non-education Group as Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}",
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "tests[\"Good error\"] = responseBody.has(\"Resource not found\");"
                    ]
                  }
                }
              ],
              "id": "ff455e9b-a8e9-0551-3012-ebcd71b95db6",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \"@odata.type\":\"microsoft.graph.group\",\n   \"displayName\":\"GarethClass28\",\n   \"mailNickname\":\"class282\",\n   \"mailEnabled\":true,\n   \"securityEnabled\":false,\n   \"extension_fe2174665583431c953114ff7268b7b3_Education_Period\":\"5\",\n   \"groupTypes\":[\"Unified\"]}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{nonEducationGroupId}}"
              },
              "response": []
            }
          ],
          "id": "b136c29b-141e-4a56-b9d7-68e77103bce5"
        },
        {
          "name": "User",
          "item": [
            {
              "name": "Get A User",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"User found\"] = responseBody.has('\"id\":')"
                    ]
                  }
                }
              ],
              "id": "04a5af12-b803-8b3c-25b7-193ac7722d00",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}"
              },
              "response": []
            },
            {
              "name": "Get A User  Expand Schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools returned\"] = responseBody.has('schools\":[{'); "
                    ]
                  }
                }
              ],
              "id": "4871ce83-81e4-bcf2-447a-34f510b3657c",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}?$expand=schools",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users",
                    "{{primaryTestUserId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "schools"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A User  Expand Classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Classes returned\"] = responseBody.has('classes\":[{'); ",
                      "}"
                    ]
                  }
                }
              ],
              "id": "17e7a8db-cad4-536a-6f5c-0d7cb7b8256d",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}?$expand=classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users",
                    "{{primaryTestUserId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A User  Expand Multi",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(expectedSuccess)",
                      "{",
                      "    tests[\"Schools and classes present\"] = responseBody.has('classes\":[{') && responseBody.has('schools\":[{')  ;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "3421dd70-5abe-661b-ae48-464fcfaeec2d",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}?$expand=schools,classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users",
                    "{{primaryTestUserId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "schools,classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A User  Nav Schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools returned\"] = responseBody.has('value\":[{')"
                    ]
                  }
                }
              ],
              "id": "a7c94e9d-3075-4042-b6b5-6a2be2ca4f5d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}/schools"
              },
              "response": []
            },
            {
              "name": "Get A User  Nav Classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Classes returned\"] = responseBody.has('value\":[{');",
                      "}"
                    ]
                  }
                }
              ],
              "id": "71b08033-acdd-e5fd-7d31-8d064765564f",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}/classes"
              },
              "response": []
            },
            {
              "name": "Get A User's Teachers",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Classes returned\"] = responseBody.has('value\":[{');",
                      "}"
                    ]
                  }
                }
              ],
              "id": "4249b879-f895-516f-9573-7d425e8c47b5",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}/classes?$expand=teachers",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users",
                    "{{primaryTestUserId}}",
                    "classes"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "teachers"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "GET Non-education User as EduUser",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"PrimaryRole appropriate\"] = !responseBody.has(\"primaryRole\");"
                    ]
                  }
                }
              ],
              "id": "769923f0-21cb-ec44-b1a1-e70e734d017b",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \"@odata.type\":\"microsoft.graph.group\",\n   \"displayName\":\"GarethClass28\",\n   \"mailNickname\":\"class282\",\n   \"mailEnabled\":true,\n   \"securityEnabled\":false,\n   \"extension_fe2174665583431c953114ff7268b7b3_Education_Period\":\"5\",\n   \"groupTypes\":[\"Unified\"]}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{nonEducationUserId}}"
              },
              "response": []
            }
          ],
          "id": "3574fbf0-5e10-470c-a42a-c002f4abc97f"
        },
        {
          "name": "Me",
          "item": [
            {
              "name": "T_PreME",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "86f6eab8-294e-439f-bb35-0c3c0cee76a6",
                    "exec": [
                      "// Skip /me request for AppOnly\r",
                      "var authType = postman.getEnvironmentVariable(\"authType\");\r",
                      "if (authType === 'appOnly')\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_PostME\");\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "a2b66926-f1c6-0453-3de7-a884fbe3ecd6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "Get EDU me",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"User found\"] = responseBody.has('\"id\":')"
                    ]
                  }
                }
              ],
              "id": "d755d8cb-1710-05d8-46fc-f090d9a0552a",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/me"
              },
              "response": []
            },
            {
              "name": "Get EDU me Nav classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes found\"] = responseBody.has('\"id\":')"
                    ]
                  }
                }
              ],
              "id": "397a95c7-2bc6-eaf4-a054-220ab9bd7b1a",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/me/classes"
              },
              "response": []
            },
            {
              "name": "Get EDU me Nav schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "// tests[\"Schools found\"] = responseBody.has('\"id\":')"
                    ]
                  }
                }
              ],
              "id": "8aebc54b-467d-4ff1-ac30-93ae03b0dc0b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/me/schools"
              },
              "response": []
            },
            {
              "name": "Get EDU me Expand classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "afc872d5-5a80-4aeb-a80a-1fd141e024b6",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "c97c12cc-6477-4f7a-b5b4-f28fef693f59",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Classes found\"] = responseBody.has('\"classes\":[{')"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "04b9778f-ccc8-4324-8c93-5b47efe03973",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/me?$expand=classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "me"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get EDU me Expand schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "afc872d5-5a80-4aeb-a80a-1fd141e024b6",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "c97c12cc-6477-4f7a-b5b4-f28fef693f59",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools found\"] = responseBody.has('\"schools\":[{')"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "3c0c1ce8-159b-4bb5-a3fd-de3ff4715b3b",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/me?$expand=schools",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "me"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "schools"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get EDU me Expand multi",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "afc872d5-5a80-4aeb-a80a-1fd141e024b6",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "c97c12cc-6477-4f7a-b5b4-f28fef693f59",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Schools found\"] = responseBody.has('\"schools\":[{');",
                      "tests[\"Classes found\"] = responseBody.has('\"classes\":[{');"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "997d7463-fc88-4d9f-916c-8d0a75215ee9",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/me?$expand=schools,classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "me"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "schools,classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "T_PostME",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6c284721-9d8d-4fbe-9660-17903ff6df16",
                    "exec": [
                      "// Just a placeholder."
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ecedfc4a-cc68-517b-3677-7ed7689bed7a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            }
          ],
          "id": "927bd4c3-b785-40e5-b066-087ba488a9a2"
        }
      ],
      "id": "d649d1a4-c42c-4dae-ad7b-ef4fced317f9"
    },
    {
      "name": "Read",
      "item": [
        {
          "name": "Auth",
          "item": [
            {
              "name": "T_PreRead",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b67bc7b4-783f-4621-961a-0de7b1e9a992",
                    "exec": [
                      "postman.setEnvironmentVariable(\"GraphAuth\", \"\");\r",
                      "var authType = postman.getEnvironmentVariable(\"authType\");\r",
                      "if (authType === 'appOnly')\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_AppOnlyToken GraphRead\");\r",
                      "}\r",
                      "else\r",
                      "{\r",
                      "    // App + User only does readbasic.\r",
                      "    postman.setNextRequest(\"T_AppPlusUserToken GraphRead\");\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7a31ab6a-082e-6bb8-7182-0fc66a9fd4be",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "T_AppPlusUserToken  GraphRead",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f3a585db-6c80-46de-8bf1-d8cd3dea48de",
                    "exec": [
                      "postman.setNextRequest(\"T_PostRead\");\r",
                      "postman.setEnvironmentVariable(\"expectedSuccess\", false);\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "0475fd6c-57dd-493e-9e4b-d216ad0462f9",
                    "exec": [
                      "tests[\"Successful Request\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200)",
                      "{",
                      "    var data = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                      "    tests[\"New read tokens written to environment\"] = true;",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6aabd508-a786-89f0-df05-b2ba1e4d9ebd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{GraphClientIdRead}}",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{GraphSecretRead}}",
                      "type": "text"
                    },
                    {
                      "key": "resource",
                      "value": "{{loginResource}}",
                      "type": "text"
                    },
                    {
                      "key": "username",
                      "value": "{{apiCaller}}",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "{{apiCallerPwd}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://{{loginHost}}/common/oauth2/token"
              },
              "response": []
            },
            {
              "name": "T_AppOnlyToken GraphRead",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "90545f62-de35-4971-96e3-b24d031eb7f0",
                    "exec": [
                      "postman.setNextRequest(\"T_PostRead\");\r",
                      "postman.setEnvironmentVariable(\"expectedSuccess\", true);\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b0551625-e869-4698-bf44-358b23106950",
                    "exec": [
                      "tests[\"Successful Request\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200)",
                      "{",
                      "    var data = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                      "    tests[\"New app-only read token written to environment\"] = true;",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "238c2fa0-e8d4-e012-8c45-bdc000c2915d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{GraphClientIdRead}}",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{GraphSecretRead}}",
                      "type": "text"
                    },
                    {
                      "key": "resource",
                      "value": "{{loginResource}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://{{loginHost}}/{{tenantDomain}}/oauth2/token"
              },
              "response": []
            },
            {
              "name": "T_PostRead",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var auth = postman.getEnvironmentVariable(\"GraphAuth\");",
                      "tests[\"Auth token acquired.\"] = (auth.length > 10);",
                      ""
                    ]
                  }
                }
              ],
              "id": "8349f44f-d742-a4f0-f347-307cf8d6a702",
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "https://postman-echo.com/get"
              },
              "response": []
            }
          ],
          "id": "dda67313-7e7d-4848-8ea8-b87af7338f27"
        },
        {
          "name": "User",
          "item": [
            {
              "name": "Get Users",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e5cb67c2-9c28-49ea-8f23-2f968b63a280",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a0b83f5f-cd09-4e5d-969a-bce8ad9c7ec2",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Users found\"] = responseBody.has('\"id\":');",
                      " var data = JSON.parse(responseBody);",
                      " postman.setEnvironmentVariable(\"odataNextLink\", data[\"@odata.nextLink\"]);",
                      "}",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "87866311-145b-a8e4-601d-cbff3dea75dc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users"
              },
              "response": []
            },
            {
              "name": "Get Users NEXT",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "d210f93e-8037-406d-b43f-6a202115b92d",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "29a4ff91-c20f-4422-9fdd-10a0dfe878a5",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Users found\"] = responseBody.has('\"id\":');",
                      "var data = JSON.parse(responseBody);",
                      " postman.setEnvironmentVariable(\"odataNextLink\", data[\"@odata.nextLink\"]);",
                      "}",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "974b954d-54cd-48b1-95a5-bf00c47d5935",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{odataNextLink}}"
              },
              "response": []
            },
            {
              "name": "Get Users with Filter",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Users found\"] = responseBody.has('\"id\":')",
                      "}",
                      ""
                    ]
                  }
                }
              ],
              "id": "c31e244f-c065-1d2c-5597-ff9646936f30",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users?$filter=displayName eq 'PrimaryTestUser'",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "$filter",
                      "value": "displayName eq 'PrimaryTestUser'"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Users Expand Schools",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Schools returned\"] = responseBody.has('schools\":[{'); ",
                      "}"
                    ]
                  }
                }
              ],
              "id": "6ded900a-a062-1518-9343-4c2ad854a525",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users?$expand=schools",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "schools"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Users Expand Classes",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Classes returned\"] = responseBody.has('classes\":[{'); ",
                      "}"
                    ]
                  }
                }
              ],
              "id": "e2c417b3-9b67-b91c-b76b-6943c7164f26",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users?$expand=classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Users Expand TaughtClasses",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2fc57483-b82d-4550-a849-9794e120c3b3",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ce161b77-54bc-4d9e-ba22-b237548e1947",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Taught classes returned\"] = responseBody.has('taughtClasses\":[{'); ",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ddbf9ec5-0224-41e4-ad35-0eaf72ca2993",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": {
                  "raw": "{{https}}://{{host}}/beta/education/users?$expand=taughtClasses&$select=id,taughtClasses",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "beta",
                    "education",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "taughtClasses"
                    },
                    {
                      "key": "$select",
                      "value": "id,taughtClasses"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Users Expand Multi",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Schools and classes present\"] = responseBody.has('classes\":[{') && responseBody.has('schools\":[{')  ;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "7f13f371-b8bb-1373-c1f7-62bc6724824f",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users?$expand=classes,schools",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "classes,schools"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A User Check Detail",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "var found = \"not found\";",
                      "if (expectedSuccess === true)",
                      "{",
                      "    found = \"found\";",
                      "}",
                      "tests[\"ID found\"] = responseBody.has('\"id\":');",
                      "tests[\"primaryRole found\"] = responseBody.has('\"primaryRole\":');",
                      "tests[\"assignedLicenses \" + found] = !responseBody.has('\"assignedLicenses\":') != expectedSuccess;",
                      "tests[\"assignedPlans \" + found] = !responseBody.has('\"assignedPlans\":') != expectedSuccess;",
                      "tests[\"onPremisesImmutableId \" + found] = !responseBody.has('\"onPremisesImmutableId\":') != expectedSuccess;",
                      "tests[\"student \" + found] = !responseBody.has('\"student\":') != expectedSuccess;",
                      "tests[\"externalSource \" + found] = !responseBody.has('\"externalSource\":') != expectedSuccess;",
                      ""
                    ]
                  }
                }
              ],
              "id": "4ce8c89b-8149-1021-9bb5-6488b5c88151",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tags\": \"IncludeEntityAbstractBaseType;DeltaSyncSupported;EnableNoDollarSystemQueryParameters\",\n    \"Microsoft.DirectoryServices\": \"Beta20170306\",\n    \"Microsoft.EducationRosteringAPIS\": \"20170313.3\",\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}"
              },
              "response": []
            },
            {
              "name": "T_Pre_GetUserWithRelated",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "97b9a535-07e9-47c5-bf58-80719a2a4647",
                    "exec": [
                      "// Skip /relatedContacts request for v1.0\r",
                      "\r",
                      "// Failing, disabling while invesigating root cause\r",
                      "//postman.setNextRequest(\"T_PostRelated\"); // Temp disabled due to failures\r",
                      "\r",
                      "var graphVersion = postman.getEnvironmentVariable(\"graphVersion\");\r",
                      "if (graphVersion === 'v1.0')\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_Post_GetUserWithRelated\");\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "289aa271-a55b-4b53-bd0e-5542e8ba499d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "Get A User With RelatedContacts",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9647a976-ab8e-4814-8031-a730c45c1ca5",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "75aca3e2-4123-4499-9318-50a5a06482d2",
                    "exec": [
                      "var expectedSuccess = (postman.getEnvironmentVariable('expectedSuccess') == 'true');",
                      "console.log('expected success =@' + expectedSuccess + '@');",
                      "if (expectedSuccess === true)",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"ID found\"] = responseBody.has('\"id\":');",
                      "    tests[\"displayName found\"] = responseBody.has('\"displayName\":');",
                      "    tests[\"relatedContacts found\"] = responseBody.has('\"relatedContacts\":');",
                      "    tests[\"relationship found\"] = responseBody.has('\"relationship\":');",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "46276bfc-faa7-4c4e-b2b4-922723f3e0c9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}?$select=id,displayName,relatedContacts",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "users",
                    "{{primaryTestUserId}}"
                  ],
                  "query": [
                    {
                      "key": "$select",
                      "value": "id,displayName,relatedContacts"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "T_Post_GetUserWithRelated",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6da055d6-6444-453e-974a-e73232a9ede3",
                    "exec": [
                      "// Just a placeholder."
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "fb8f33a2-70ff-4364-9e09-250f3a0c3f9a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            }
          ],
          "id": "4d5d8d58-e439-449a-b407-f70b08ff1418"
        },
        {
          "name": "School",
          "item": [
            {
              "name": "Get A School Nav Users",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Users returned\"] = responseBody.has('value\":[{')",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "5155ff78-21de-ad80-8784-bee86b4c857c",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{primaryTestSchoolId}}/users"
              },
              "response": []
            },
            {
              "name": "Get Schools Expand Multi",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7b00936e-3885-4d3b-adf2-41758576bfb7",
                    "type": "text/javascript",
                    "exec": [
                      "if (this.hasOwnProperty(\"GlobalFunctions\") )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fae3fb3e-1119-404a-b875-31c02ce678ea",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Users and classes present\"] = responseBody.has('classes\":[{') && responseBody.has('users\":[{');",
                      "}"
                    ]
                  }
                }
              ],
              "id": "94b4a1b3-6da7-a7cc-1cf5-81290834277c",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/schools?$expand=users, classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "schools"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "users, classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A School Expand Multi",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "c1ec6e50-2826-4fe3-9884-1348d901f750",
                    "type": "text/javascript",
                    "exec": [
                      "if (this.hasOwnProperty(\"GlobalFunctions\") )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "0cf902c0-b724-4fa4-8900-409daa7c09ba",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Users and classes present\"] = responseBody.has('classes\":[{') && responseBody.has('users\":[{');",
                      "}"
                    ]
                  }
                }
              ],
              "id": "fa80fee2-8f40-9e73-a3bb-6508e197fd6e",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{primaryTestSchoolId}}?$expand=users,classes",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "schools",
                    "{{primaryTestSchoolId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "users,classes"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Schools Expand Users",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "c74530ab-a867-48dd-8ac1-b580ca8f8ea9",
                    "type": "text/javascript",
                    "exec": [
                      "if (this.hasOwnProperty(\"GlobalFunctions\") )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "7eb689bc-09d8-43db-a2a7-5e66dfc173a3",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Users returned\"] = responseBody.has('users\":[{')",
                      "}"
                    ]
                  }
                }
              ],
              "id": "116bea15-d708-1442-32f0-438dce288ccd",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/schools?$expand=users",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "schools"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "users"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get A School Expand Users",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1883c8b7-0385-4eb5-ac99-ca34c0125b3d",
                    "type": "text/javascript",
                    "exec": [
                      "if (this.hasOwnProperty(\"GlobalFunctions\") )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f0aa16a1-34a6-40d5-a25e-3a212dcf2ada",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Users returned\"] = responseBody.has('users\":[{')",
                      "}"
                    ]
                  }
                }
              ],
              "id": "26fc63d9-4e44-9882-cc3b-ff8a227b6f41",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "url": {
                  "raw": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{primaryTestSchoolId}}?$expand=users",
                  "protocol": "{{https}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{graphVersion}}",
                    "education",
                    "schools",
                    "{{primaryTestSchoolId}}"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "users"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "9001b733-0e77-4e50-9daf-dfe2316deacf"
        }
      ],
      "id": "c9956579-d1c6-4384-96db-936bcf5a97aa"
    },
    {
      "name": "ReadWrite",
      "item": [
        {
          "name": "Auth",
          "item": [
            {
              "name": "T_PreReadWrite",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "462c72a5-720d-4ab2-b71d-3ada7aa327a9",
                    "exec": [
                      "postman.setEnvironmentVariable(\"GraphAuth\", \"\");\r",
                      "var authType = postman.getEnvironmentVariable(\"authType\");\r",
                      "if (authType === 'appOnly')\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_AppOnlyToken GraphReadWrite\");\r",
                      "}\r",
                      "else\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_AppPlusUserToken GraphReadWrite\");\r",
                      "\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "807fa391-54f4-a1d9-535d-979bd7c20f28",
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "T_AppPlusUserToken GraphReadWrite",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "5004e745-62ce-4def-b1e2-8afcdc9aed60",
                    "exec": [
                      "postman.setNextRequest(\"T_PostReadWrite\");"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fa698caf-cf22-41f5-8356-f3f998a1350b",
                    "exec": [
                      "tests[\"Successful Request\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200)",
                      "{",
                      "    var data = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                      "    tests[\"New readwrite tokens written to environment\"] = true;",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "72dbfe44-3dbd-e041-18fa-8db716ac7a58",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{GraphClientIdReadWrite}}",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{GraphSecretReadWrite}}",
                      "type": "text"
                    },
                    {
                      "key": "resource",
                      "value": "{{loginResource}}",
                      "type": "text"
                    },
                    {
                      "key": "username",
                      "value": "{{apiCaller}}",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "{{apiCallerPwd}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://{{loginHost}}/common/oauth2/token"
              },
              "response": []
            },
            {
              "name": "T_AppOnlyToken GraphReadWrite",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"T_PostReadWrite\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful Request\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200)",
                      "{",
                      "    var data = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                      "    tests[\"New app-only readwrite token written to environment\"] = true;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "ca69d515-5067-be9e-16e9-13f96a9a8221",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{GraphClientIdReadWrite}}",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{GraphSecretReadWrite}}",
                      "type": "text"
                    },
                    {
                      "key": "resource",
                      "value": "{{loginResource}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://{{loginHost}}/{{tenantDomain}}/oauth2/token"
              },
              "response": []
            },
            {
              "name": "T_PostReadWrite",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var auth = postman.getEnvironmentVariable(\"GraphAuth\");",
                      "tests[\"Auth token acquired.\"] = (auth.length > 10);",
                      ""
                    ]
                  }
                }
              ],
              "id": "7e0a90f6-aef9-373d-4630-09c703427d8b",
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "https://postman-echo.com/get"
              },
              "response": []
            }
          ],
          "id": "963703dd-7c85-474e-8152-90399039c8c1"
        },
        {
          "name": "Auth Copy",
          "item": [
            {
              "name": "T_PreReadWrite",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "02f92da2-828d-422a-9afe-7cd23008ae12",
                    "exec": [
                      "postman.setEnvironmentVariable(\"GraphAuth\", \"\");\r",
                      "var authType = postman.getEnvironmentVariable(\"authType\");\r",
                      "if (authType === 'appOnly')\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_AppOnlyToken GraphReadWrite\");\r",
                      "}\r",
                      "else\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_AppPlusUserToken GraphReadWrite\");\r",
                      "\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "130f1fa4-0410-4d59-8aba-dad4f99f369e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "T_AppPlusUserToken GraphReadWrite",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1909375a-cdbd-4338-8a1f-4eb762bb183b",
                    "exec": [
                      "postman.setNextRequest(\"T_PostReadWrite\");"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "535e3ecf-8726-4ff6-bd44-170c6d021740",
                    "exec": [
                      "tests[\"Successful Request\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200)",
                      "{",
                      "    var data = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                      "    tests[\"New readwrite tokens written to environment\"] = true;",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ee9aa0f5-45e6-4947-b0dd-958207291e44",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "password",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{GraphClientIdReadWrite}}",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{GraphSecretReadWrite}}",
                      "type": "text"
                    },
                    {
                      "key": "resource",
                      "value": "{{loginResource}}",
                      "type": "text"
                    },
                    {
                      "key": "username",
                      "value": "{{apiCaller}}",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "{{apiCallerPwd}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://{{loginHost}}/common/oauth2/token"
              },
              "response": []
            },
            {
              "name": "T_AppOnlyToken GraphReadWrite",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"T_PostReadWrite\");"
                    ],
                    "id": "cbce54c1-d34d-4db3-8c83-39275b47f21f"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful Request\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200)",
                      "{",
                      "    var data = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"GraphAuth\", \"Bearer \" + data.access_token);",
                      "    tests[\"New app-only readwrite token written to environment\"] = true;",
                      "}"
                    ],
                    "id": "429c51a3-36d2-4cd1-84d8-0e7bb1a76978"
                  }
                }
              ],
              "id": "37a6511b-3ca4-4fd8-a08c-45d5e1f35147",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{GraphClientIdReadWrite}}",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{GraphSecretReadWrite}}",
                      "type": "text"
                    },
                    {
                      "key": "resource",
                      "value": "{{loginResource}}",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://{{loginHost}}/{{tenantDomain}}/oauth2/token"
              },
              "response": []
            },
            {
              "name": "T_PostReadWrite",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var auth = postman.getEnvironmentVariable(\"GraphAuth\");",
                      "tests[\"Auth token acquired.\"] = (auth.length > 10);",
                      ""
                    ],
                    "id": "b9a5b4fb-ec35-44fe-ada9-0c83c680b014"
                  }
                }
              ],
              "id": "4534fd37-0f8f-4bbc-af9b-a73d3335d7ce",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            }
          ],
          "id": "cc5a6159-86ff-4477-8065-631640a98433"
        },
        {
          "name": "School",
          "item": [
            {
              "name": "Make a School",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "339ec8c3-05b3-4a57-8700-e6c4616125ef",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}",
                      "var currentRandom = Math.floor(Math.random() * 1000).toString();",
                      "var currentRandom2 = Math.floor(Math.random() * 1000).toString();",
                      "postman.setEnvironmentVariable(\"currentRandom\", currentRandom + currentRandom2);"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "1c5c51d0-2e28-4d6e-a9d1-ef3875eb4c1f",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "    postman.setEnvironmentVariable(\"justCreatedId\", \"9900AA5E-8EBF-4407-B151-CBCF310F1383\"); // Dummy guid",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "    tests[\"School created\"] = responseBody.has('\"id\":')",
                      "    if (responseBody.has('\"id\":'))",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        postman.setEnvironmentVariable(\"justCreatedId\", jsonData.id);",
                      "    }",
                      "    if (typeof(GlobalFunctions) !== 'undefined' )",
                      "    {",
                      "        GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "99e5cb04-3362-3f90-53cb-769d57f6c80a",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationSchool\",\n\t\"displayName\":\"SchoolTestRun{{currentRandom}}\",\n\t\"description\": \"A lovely school to test.\",\n\t\"externalSource\": \"SIS\",\n\t\"address\": {\n\t    \"street\": \"1 Bash Street\",\n\t    \"city\": \"Redmond\",\n\t    \"state\": \"WA\",\n\t    \"countryOrRegion\": \"USA\",\n\t    \"postalCode\": \"98052\"\n \t}\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools"
              },
              "response": []
            },
            {
              "name": "Check just created School",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba64ae75-7194-4899-a026-b6e084173cd4",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "6588c580-c1f0-40e3-9128-af84a15f01e7",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    ",
                      "    if(responseCode.code == 200 && parseInt(pm.environment.get(\"retryCount\")) < 8){",
                      "        // Found ",
                      "        tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "        tests[\"School created\"] = responseBody.has('\"id\":')",
                      "        postman.setEnvironmentVariable(\"retryCount\", \"0\");",
                      "    }",
                      "    else{ ",
                      "        // Not found, retry",
                      "        if (typeof(GlobalFunctions) !== 'undefined' ) {",
                      "            GlobalFunctions.retryTest(pm.info.requestName, \"School created\", postman, tests);",
                      "        }",
                      "    }        ",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "f0df30f3-92e6-dcb6-6909-a42dd1cd8368",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Add a School Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "525f8184-de9c-4e8f-b665-35ce8d339e7d",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "1d045900-f93c-454f-83e2-53de8866ff87",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "    if (typeof(GlobalFunctions) !== 'undefined' )",
                      "    {",
                      "        GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "f8940693-a717-3c37-07ac-5a54b5cb62c3",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \n\t\"@odata.id\":\"https://{{host}}/{{graphVersion}}/education/classes/{{primaryTestClassId}}\" \n}\n"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}/classes/$ref"
              },
              "response": []
            },
            {
              "name": "Check just added Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f6d2ce36-6187-4736-b0cb-0c8953fca227",
                    "exec": [
                      "",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fe4d0b5e-f3de-442b-a4ab-4274ca5e6495",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');\r",
                      "if (!expectedSuccess || expectedSuccess === false) {\r",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;\r",
                      "}\r",
                      "else {\r",
                      "    //tests[\"Status code is 200 - iteration: \" + postman.getEnvironmentVariable(\"retryCount\")] = responseCode.code === 200;\r",
                      "    if (responseCode.code === 200) {\r",
                      "        var jsonData = JSON.parse(responseBody);\r",
                      "        if (jsonData.value.length === 1) {\r",
                      "            tests[\"One Class\"] = true;\r",
                      "            tests[\"Class added\"] = jsonData.value.length === 1 && jsonData.value[0].id === postman.getEnvironmentVariable(\"primaryTestClassId\");\r",
                      "            postman.setEnvironmentVariable(\"retryCount\", \"0\");\r",
                      "        }\r",
                      "        else {\r",
                      "            GlobalFunctions.retryTest(\"Check just added Class\", \"One Class\", postman, tests);\r",
                      "        }\r",
                      "    }\r",
                      "    else {\r",
                      "        GlobalFunctions.retryTest(\"Check just added Class\", \"One Class\", postman, tests);\r",
                      "    }    \r",
                      "}\r",
                      "if (typeof (GlobalFunctions) !== 'undefined') {\r",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "a566d1d3-6fe0-d7af-175a-e8a92bb9b658",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}/classes"
              },
              "response": []
            },
            {
              "name": "Add a School User",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "78ad6a95-9370-49c8-86e5-bac45e27113d",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a3396931-b537-4d1b-bd9c-cc4da06e60ac",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "    postman.setEnvironmentVariable(\"retryCount\", \"0\");",
                      "    if (typeof(GlobalFunctions) !== 'undefined' )",
                      "    {",
                      "        GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "    }    ",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "12df80c0-0c40-ddbc-ea46-a0ac425560b1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \n\t\"@odata.id\":\"https://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}\" \n}\n"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}/users/$ref"
              },
              "response": []
            },
            {
              "name": "Check just added User",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "03ff21bf-e675-45c0-9b89-c3104d1ac7bb",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "5459275c-90b5-4148-b407-cefd91fc7821",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    if ( responseCode.code === 200)",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        if(jsonData.value.length === 1){",
                      "            tests[\"One User\"] = jsonData.value.length === 1;",
                      "            tests[\"User added\"] = jsonData.value.length === 1 && jsonData.value[0].id === postman.getEnvironmentVariable(\"primaryTestUserId\");",
                      "            postman.setEnvironmentVariable(\"retryCount\", \"0\");",
                      "        }",
                      "        else {",
                      "            GlobalFunctions.retryTest(pm.info.requestName, \"One User\", postman, tests);",
                      "        }        ",
                      "    }",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "8b77fa24-4fd2-e12a-b220-c8594b14f09e",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}/users"
              },
              "response": []
            },
            {
              "name": "Delete School Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "572bd557-8f68-a03d-c615-6c96f22796de",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}/classes/{{primaryTestClassId}}/$ref"
              },
              "response": []
            },
            {
              "name": "Delete School User",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "dfa0bfff-c935-4f8f-8b81-fd97aa003853",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff476f66-ba90-4236-a51f-55b0508fe582",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "    postman.setEnvironmentVariable(\"retryCount\", \"0\");",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "4f47bc34-e33a-1438-4ad8-bde275f6906f",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}/users/{{primaryTestUserId}}/$ref"
              },
              "response": []
            },
            {
              "name": "Check Class removed",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "32642968-020c-48a2-9efc-ecfa192ac4d6",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8efc0b86-f738-4566-808d-11a5d3f8f8f6",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    //tests[\"Status code is 200 - iteration: \" + postman.getEnvironmentVariable(\"retryCount\")] = responseCode.code === 200;",
                      "    if ( responseCode.code === 200)",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        if (jsonData.value.length === 0)",
                      "        {",
                      "            tests[\"Class removed\"] = true;",
                      "            postman.setEnvironmentVariable(\"retryCount\", \"0\");",
                      "        }",
                      "        else",
                      "        {",
                      "            GlobalFunctions.retryTest(\"Check Class removed\", \"Class removed\", postman, tests);",
                      "        }",
                      "    }",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "2924f983-c329-5db2-2ff7-c2346becb343",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}/classes"
              },
              "response": []
            },
            {
              "name": "Check User removed",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "abb13e04-1b01-4ed3-a38c-ad301129ed8d",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f181dc0a-5be6-4e94-af77-8edc566e34bd",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    //tests[\"Status code is 200 - iteration: \" + postman.getEnvironmentVariable(\"retryCount\")] = responseCode.code === 200;",
                      "    if ( responseCode.code === 200)",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        if (jsonData.value.length === 0)",
                      "        {",
                      "            tests[\"User removed\"];",
                      "            postman.setEnvironmentVariable(\"retryCount\", \"0\");",
                      "        }",
                      "        else",
                      "        {",
                      "            GlobalFunctions.retryTest(\"Check Class removed\", \"Class removed\", postman, tests);",
                      "            GlobalFunctions.retryTest(pm.info.requestName, \"User removed\", postman, tests);",
                      "        }",
                      "    }",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6389b6ff-efff-46d6-20de-c245f66508d0",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}/users"
              },
              "response": []
            },
            {
              "name": "Modify just created School",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "bad0355c-48c0-8ec5-724f-0a15091fbef8",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"description\": \"An even better school to test.\",\n\t\"externalSource\": \"Manual\",\n\t\"address\": {\n\t    \"city\": \"Seattle\"\n \t}\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Check modification to School",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "5abe460f-053f-4bde-a284-b21f21efead3",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "83b8c036-792c-4936-9c36-0b2e72db5140",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"School present\"] = responseBody.has('\"id\":')",
                      "    tests[\"Simple data modified\"] = responseBody.has('\"description\":\"An even better school to test.\"');",
                      "    tests[\"Custom data modified\"] = responseBody.has('\"externalSource\":\"manual\"');",
                      "    tests[\"Custom school data modified\"] = responseBody.has('\"city\":\"Seattle\"');",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9352e1d1-234a-029e-bcf1-d27df317b97b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Delete just created School",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "a5de584f-b497-3b24-60a3-01ea76302bad",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Check School deleted",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.reportFails(tests, responseCode, responseBody);",
                      "}"
                    ]
                  }
                }
              ],
              "id": "d1d3b040-09b7-a44d-54f9-75da9846b4dc",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/schools/{{justCreatedId}}"
              },
              "response": []
            }
          ],
          "id": "396767d9-b95a-4b74-9b18-0f5249afdcf1"
        },
        {
          "name": "Class",
          "item": [
            {
              "name": "Make a Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}",
                      "var currentRandom = Math.floor(Math.random() * 1000).toString();",
                      "var currentRandom2 = Math.floor(Math.random() * 1000).toString();",
                      "postman.setEnvironmentVariable(\"currentRandom\", currentRandom + currentRandom2);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "    postman.setEnvironmentVariable(\"justCreatedId\", \"9900AA5E-8EBF-4407-B151-CBCF310F1383\"); // Dummy guid",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "    tests[\"Class created\"] = responseBody.has('\"id\":')",
                      "    if (responseBody.has('\"id\":'))",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        postman.setEnvironmentVariable(\"justCreatedId\", jsonData.id);",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "id": "44872376-7b9b-b4c7-d427-3d38c5fdc694",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"ClassTestRun{{currentRandom}}\",\n\t\"mailNickname\":\"classtest{{currentRandom}}\",\n\t\"period\":\"5\",\n\t\"externalSource\": \"SIS\",\n\t\"term\": {\n\t\t\"externalId\": \"S2\",\n\t\t\"displayName\": \"Semester 2\"\n\t}\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes"
              },
              "response": []
            },
            {
              "name": "Check just created Class retrievable",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Class created\"] = responseBody.has('\"id\":')",
                      "}"
                    ]
                  }
                }
              ],
              "id": "2b51fd56-3ebd-7bfa-4b41-8570e451797b",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Add a Class member",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "0996064d-bc3d-67fa-fcfe-549abe4c83f0",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \n\t\"@odata.id\":\"https://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}\" \n}\n"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/members/$ref"
              },
              "response": []
            },
            {
              "name": "Add a Class teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}",
                      "// Skip the extra teacher for app+user or we'll end up with three.",
                      "if (postman.getEnvironmentVariable(\"authType\") != \"appOnly\")",
                      "{",
                      "     postman.setNextRequest(\"Check just added member\");",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "a0fd5e98-43eb-75ea-0148-0dd347027d08",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \n\t\"@odata.id\":\"https://{{host}}/{{graphVersion}}/education/users/{{primaryTestUserId}}\" \n}\n"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/teachers/$ref"
              },
              "response": []
            },
            {
              "name": "Add a secondary Teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "ef80a6db-030e-d79b-7741-1fcff411ee27",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \n\t\"@odata.id\":\"https://{{host}}/{{graphVersion}}/education/users/{{secondaryTestUserId}}\" \n}\n"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/teachers/$ref",
                "description": "Need to add a second teacher because in App-only mode the caller is not automatically added, and so the first added teacher cannot be removed."
              },
              "response": []
            },
            {
              "name": "Check just added member",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    if ( responseCode.code === 200)",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        tests[\"One Member\"] = jsonData.value.length === 1;",
                      "        tests[\"Member added\"] = jsonData.value.length === 1 && jsonData.value[0].id === postman.getEnvironmentVariable(\"primaryTestUserId\");",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "id": "42b2cb84-4ea6-f947-eec5-bf12ec1ca41d",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/members"
              },
              "response": []
            },
            {
              "name": "Check just added teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    if ( responseCode.code === 200)",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        tests[\"A least one Teacher\"] = jsonData.value.length >= 1;",
                      "        tests[\"Teacher added\"] = (jsonData.value.length >= 1 && jsonData.value[0].id === postman.getEnvironmentVariable(\"primaryTestUserId\")) || (jsonData.value.length === 2 &&jsonData.value[1].id === postman.getEnvironmentVariable(\"primaryTestUserId\"));",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "id": "1afacacd-381d-d01c-1ee5-b0eca323798f",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/teachers"
              },
              "response": []
            },
            {
              "name": "Delete Class member",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "757514b8-2aa5-8f5c-62b8-4dc4dffcf8ab",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/members/{{primaryTestUserId}}/$ref"
              },
              "response": []
            },
            {
              "name": "Delete Class teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "2e1cf5fb-ceed-468b-d43a-0408491194aa",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/teachers/{{primaryTestUserId}}/$ref"
              },
              "response": []
            },
            {
              "name": "Check member removed",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    if ( responseCode.code === 200)",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        tests[\"Member removed\"] = jsonData.value.length === 0;",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "id": "54d11a6f-0ab9-e838-d642-7dd499bdea3e",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/members"
              },
              "response": []
            },
            {
              "name": "Check teacher removed",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    if (responseCode.code === 200)",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        tests[\"Teacher removed\"] = !responseBody.has(postman.getEnvironmentVariable(\"primaryTestUserId\"));",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "id": "aaa359f4-1c2e-b779-c6f1-b1cdcb7c581c",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}/teachers"
              },
              "response": []
            },
            {
              "name": "Modify just created Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "9f26b95a-958f-6ea4-1f28-955a9b104114",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"classCode\": \"777\",\n\t\"displayName\": \"ChangedClass\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Check modification to Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 400\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"Class present\"] = responseBody.has('\"id\":');",
                      "    tests[\"Custom data modified\"] = responseBody.has('\"classCode\":\"777\"');",
                      "    tests[\"Standard data modified\"] = responseBody.has('\"displayName\":\"ChangedClass\"');",
                      "}"
                    ]
                  }
                }
              ],
              "id": "b7aa7c9d-8bd5-a519-fd2b-058986f0edee",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Delete just created Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "24561f88-e647-72ee-52a7-a5528903b912",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Check Class deleted",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 404\"] = responseCode.code === 404;",
                      ""
                    ]
                  }
                }
              ],
              "id": "21e1517a-9001-aa8b-0b77-3329fd076e7d",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/classes/{{justCreatedId}}"
              },
              "response": []
            }
          ],
          "id": "638156a9-79b2-46b3-b1f3-4a3c43bc010f"
        },
        {
          "name": "Teacher",
          "item": [
            {
              "name": "Make a Teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}",
                      "var currentRandom = Math.floor(Math.random() * 1000).toString();",
                      "var currentRandom2 = Math.floor(Math.random() * 1000).toString();",
                      "postman.setEnvironmentVariable(\"currentRandom\", currentRandom + currentRandom2);"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "    postman.setEnvironmentVariable(\"justCreatedId\", \"9900AA5E-8EBF-4407-B151-CBCF310F1383\"); // Dummy GUID",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "    tests[\"User created\"] = responseBody.has('\"id\":')",
                      "    if (responseBody.has('\"id\":'))",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        tests[\"Role set\"] = jsonData.primaryRole === 'teacher';",
                      "        tests[\"TeacherNumber set\"] = jsonData.teacher.teacherNumber === '456';",
                      "        postman.setEnvironmentVariable(\"justCreatedId\", jsonData.id)",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "id": "989e7f39-a72a-71f6-c6ad-7aa831fdf5bb",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationUser\",\n\t\"accountEnabled\": true,\n\t\"displayName\":\"Teacher TestRun{{currentRandom}}\",\n\t\"mailNickname\": \"TeacherTR{{currentRandom}}\",\n\t\"userPrincipalName\": \"TeacherTR{{currentRandom}}@{{tenantDomain}}\",\n\t\"middleName\": \"Middle\",\n\t\"passwordProfile\":{\n\t\t\"forceChangePasswordNextSignIn\": false,\n\t\t\"password\": \"!!abc123\"\n\t},\n\t\"primaryRole\": \"teacher\",\n\t\"teacher\": {\n\t\t\"teacherNumber\": \"456\",\n\t\t\"externalId\": \"123\"\n\t}\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users"
              },
              "response": []
            },
            {
              "name": "Check just created Teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"User created\"] = responseBody.has('\"id\":')",
                      "    tests[\"Custom data created\"] = responseBody.has('\"Middle\"')",
                      "    tests[\"Custom teacher data created\"] = responseBody.has('\"teacherNumber\":\"456\"')",
                      "}"
                    ]
                  }
                }
              ],
              "id": "d23c9c76-c9ea-be76-7b6e-c70a994109b8",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Modify just created Teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "8a742299-6530-016b-af73-003c9e35b702",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"displayName\": \"Reacher TestRun\",\n\t\"middleName\": \"Hann\",\n\t\"teacher\": {\n\t\t\"teacherNumber\": \"102\"\n\t  }\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Check modification to Teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"User present\"] = responseBody.has('\"id\":')",
                      "    tests[\"Simple data modified\"] = responseBody.has('\"displayName\":\"Reacher TestRun\"');",
                      "    tests[\"Custom data modified\"] = responseBody.has('\"Hann\"')",
                      "    tests[\"Custom teacher data modified\"] = responseBody.has('\"teacherNumber\":\"102\"')",
                      "}"
                    ]
                  }
                }
              ],
              "id": "09df8eb5-e298-cd2d-43ae-7e33ec3a0b13",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Delete just created Teacher",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ]
                  }
                }
              ],
              "id": "1809ec1a-327e-1370-5fde-aa93cd77d949",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "Check Teacher deleted",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 404\"] = responseCode.code === 404;",
                      ""
                    ]
                  }
                }
              ],
              "id": "a911d370-603c-f395-36c0-c0affb303c90",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationClass\",\n\t\"displayName\":\"GarethClassTestRun60\",\n\t\"mailNickname\":\"classtest60\",\n\t\"period\":\"5\"\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{justCreatedId}}"
              },
              "response": []
            }
          ],
          "id": "c99d5056-ed8d-402a-a8f7-bbf1a8fb7de8"
        },
        {
          "name": "Student",
          "item": [
            {
              "name": "Make a Student",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3746e43e-59a7-4af8-b480-0533f51d1ef9",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}",
                      "var currentRandom = Math.floor(Math.random() * 1000).toString();",
                      "var currentRandom2 = Math.floor(Math.random() * 1000).toString();",
                      "postman.setEnvironmentVariable(\"currentRandom\", currentRandom + currentRandom2);"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "0c13f115-c51d-4fdd-aee3-7414ac16c8de",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "    postman.setEnvironmentVariable(\"justCreatedId\", \"9900AA5E-8EBF-4407-B151-CBCF310F1383\"); // Dummy GUID",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "    tests[\"Student created\"] = responseBody.has('\"id\":')",
                      "    if (responseBody.has('\"id\":'))",
                      "    {",
                      "        var jsonData = JSON.parse(responseBody);",
                      "        tests[\"Role set\"] = jsonData.primaryRole === 'student';",
                      "        tests[\"StudentNumber set\"] = jsonData.student.studentNumber === '789';",
                      "        postman.setEnvironmentVariable(\"justCreatedId\", jsonData.id)",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "15b88c93-2f04-486f-ab99-0b497006d219",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"@odata.type\": \"microsoft.graph.educationUser\",\n\t\"accountEnabled\": true,\n\t\"displayName\":\"Student TestRun{{currentRandom}}\",\n\t\"mailNickname\": \"StudentTR{{currentRandom}}\",\n\t\"userPrincipalName\": \"StudentTR{{currentRandom}}@{{tenantDomain}}\",\n\t\"middleName\": \"Middle\",\n\t\"passwordProfile\":{\n\t\t\"forceChangePasswordNextSignIn\": false,\n\t\t\"password\": \"!!abc123\"\n\t},\n\t\"primaryRole\": \"student\",\n\t\"student\": {\n\t\t\"studentNumber\": \"789\",\n\t\t\"externalId\": \"123\",\n\t\t\"graduationYear\": \"2022\",\n        \"grade\": \"12\",\n        \"gender\": \"female\"\n\n\t}\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users"
              },
              "response": []
            },
            {
              "name": "Check just created Student",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3f6cdc1b-562b-40da-8bcb-690f6d97b74e",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ada00cc-4dff-4921-94d8-b778f19c449b",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "    tests[\"User created\"] = responseBody.has('\"id\":')",
                      "    tests[\"Custom data created\"] = responseBody.has('\"Middle\"')",
                      "    tests[\"Custom student data created\"] = responseBody.has('\"studentNumber\":\"789\"')",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0dcc1628-78c8-4d5f-84a6-9ee8e18cc7a0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{justCreatedId}}"
              },
              "response": []
            },
            {
              "name": "T_PreRelated",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "cc4c7436-de7f-4fe0-bd17-454fd27a4e8b",
                    "exec": [
                      "// Skip /relatedContacts request for v1.0\r",
                      "\r",
                      "// Failing, disabling while invesigating root cause\r",
                      "//postman.setNextRequest(\"T_PostRelated\"); // Temp disabled due to failures\r",
                      "\r",
                      "var graphVersion = postman.getEnvironmentVariable(\"graphVersion\");\r",
                      "if (graphVersion === 'v1.0')\r",
                      "{\r",
                      "    postman.setNextRequest(\"T_PostRelated\");\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9a657428-2cd4-4d47-b785-2f54d80396ed",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "Patch-Education-User-Contacts",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1cbf23a8-1bd6-4743-87e6-f2309db09ba9",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    if(responseCode.code == 200 && parseInt(pm.environment.get(\"retryCount\")) < 8){",
                      "        // Found ",
                      "        postman.setEnvironmentVariable(\"retryCount\", \"0\");",
                      "",
                      "        if (responseBody.has('\"relatedContacts\":'))",
                      "        {",
                      "            var jsonData = JSON.parse(responseBody);",
                      "            tests[\"Related count\"] = jsonData.relatedContacts.count === 3;",
                      "        }",
                      "    }",
                      "    else{ ",
                      "        // Not found, retry",
                      "        if (typeof(GlobalFunctions) !== 'undefined' ) {",
                      "            GlobalFunctions.retryTest(pm.info.requestName, pm.info.requestName, postman, tests);",
                      "        }",
                      "    }   ",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "883c63b6-959d-4e71-9458-03675872b066",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"relatedContacts\": [\n\t\t\t{\n\t\t\t\t\"displayName\": \"Test User 22\",\n\t            \"emailAddress\": \"user1@outlook.com\",\n\t            \"mobilePhone\": \"123-456-7890\",\n\t            \"relationship\": \"parent\",\n\t            \"accessConsent\": true\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"displayName\": \"Test User 23\",\n\t            \"emailAddress\": \"user2@outlook.com\",\n\t            \"mobilePhone\": \"123-456-7890\",\n\t            \"relationship\": \"parent\",\n\t            \"accessConsent\": true\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"displayName\": \"Test user 24\",\n\t            \"emailAddress\": \"user3@outlook.com\",\n\t            \"relationship\": \"relative\",\n\t            \"accessConsent\": false\n\t\t\t}\n\t\t]\n}"
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{justCreatedId}}",
                "description": "Patch"
              },
              "response": [
                {
                  "id": "587226fa-d27e-426c-8799-5c246db61265",
                  "name": "LocalGraph-PatchRC",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IkFRQUJBQUFBQUFDeS1ZdnFFcEo3UjQxMkpRNlE3NWEwQ05WY1J2eHViNmJuNFFzTndRNzFMbXRpTkV4UjlybS04QTZ2NE9IWFZManE1OFRmZnlSRklEcHI0LWhLa1ZUaUpDNzJzU1FVMG9PcTlZUnJGb2ZqTGlBQSIsImFsZyI6IlJTMjU2IiwieDV0IjoiOS1pUXRmZGdmRFhrTnZRM01ibzF6UXZkb3RNIiwia2lkIjoiOS1pUXRmZGdmRFhrTnZRM01ibzF6UXZkb3RNIn0.eyJhdWQiOiJodHRwczovL2dyYXBoLm1pY3Jvc29mdC1wcGUuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy1wcGUubmV0LzI1YjQ3NzBhLWNkMmEtNDViZS04MjU2LTY5OGExYTAwYWViMS8iLCJpYXQiOjE1MzU0OTQwMDksIm5iZiI6MTUzNTQ5NDAwOSwiZXhwIjoxNTM1NDk3OTA5LCJhY2N0IjowLCJhY3IiOiIxIiwiYWlvIjoiNDJaZ1lGQ2IxaDNRSG41T0xNUWdNR09HcmVSRll4ZVh1a1dGVzhTdldjMFA3MWtzZkEwQSIsImFtciI6WyJwd2QiXSwiYXBwX2Rpc3BsYXluYW1lIjoiU0RTQVBJVGVzdFJXIiwiYXBwaWQiOiIxNzFjNjlkMC04ZDg0LTRkZTYtYTQzYS0zN2JiNWQ1ZjAxYTgiLCJhcHBpZGFjciI6IjEiLCJmYW1pbHlfbmFtZSI6IkJhcmF0IiwiZ2l2ZW5fbmFtZSI6IkthdXNoaWsiLCJpcGFkZHIiOiIxNjcuMjIwLjIuNSIsIm5hbWUiOiJLYXVzaGlrIEJhcmF0Iiwib2lkIjoiMzEwNWFhZGMtMDhmMy00MGQ2LWFmYjMtN2Q0NWJkYmM5YjVjIiwicGxhdGYiOiIxNCIsInB1aWQiOiIxMDAzMDAwMDkwODIyNDE5Iiwic2NwIjoiRWR1QWRtaW5pc3RyYXRpb24uUmVhZFdyaXRlIFVzZXIuUmVhZCIsInN1YiI6Ik5yRHNPdGJ2TDIydkRPYTRGZG1MMXBYNVB2ZUVPb1ltNm1hVnBIM2J1NDgiLCJ0aWQiOiIyNWI0NzcwYS1jZDJhLTQ1YmUtODI1Ni02OThhMWEwMGFlYjEiLCJ1bmlxdWVfbmFtZSI6InBvcnRhbGFkbWluQHpzZHRlc3QxNS5jY3NjdHAubmV0IiwidXBuIjoicG9ydGFsYWRtaW5AenNkdGVzdDE1LmNjc2N0cC5uZXQiLCJ1dGkiOiJHU3BoTHBnaktFS1h0SFItVUxvQkFBIiwidmVyIjoiMS4wIiwid2lkcyI6WyI2MmU5MDM5NC02OWY1LTQyMzctOTE5MC0wMTIxNzcxNDVlMTAiXX0.Aqf4OedRE2sgrVY33q3aw7A4KKSeUa_B-5yilAQlVWGBSO_EWWIWyzat5--KwkGV4a5uLj8V69P1jLjIHr2khvLHNUlwhl5e--8zJocrnG8ov4goVyzekBX6Mw_FoBEy603_qA4Avb2QQs-44qTajp9EWS355sbWcvlL3OX-ijRE2ZyqHJKG7qKiLWYuY8ekPcwINhOR2P0nadUyVncsmpQM6vxS6WL_aJiASkuMCLBoEvv5S571J-aaDHXqwYN066HJ1r5DuyZdjRGtvDICotf6FO38MOxtWVUT3A23eMaGIyEep6vYWhwGHjp7wUO-SL0z1FrYURWoQ_VpKa3c7w"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"relatedContacts\": [\n\t\t\t{\n\t\t\t\t\"displayName\": \"TestUser G\",\n\t\t\t\t\"emailAddress\": \"user@outlook.com\",\n            \t\"mobilePhone\": \"123-456-7890\",\n            \t\"relationship\": \"Parent\"\n\t\t\t}\n\t\t]\n}"
                    },
                    "url": "https://{{host}}/{{version}}/educationUser/1eccbb96-6ede-403d-aa2f-97131b5e6efb"
                  },
                  "status": "Accepted",
                  "code": 202,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Cache-Control",
                      "value": "private",
                      "name": "Cache-Control",
                      "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false;charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 28 Aug 2018 22:46:30 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Duration",
                      "value": "15240.6609",
                      "name": "Duration",
                      "description": "Custom header"
                    },
                    {
                      "key": "OData-Version",
                      "value": "4.0",
                      "name": "OData-Version",
                      "description": "Custom header"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000",
                      "name": "Strict-Transport-Security",
                      "description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked",
                      "name": "Transfer-Encoding",
                      "description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
                    },
                    {
                      "key": "client-request-id",
                      "value": "13a2a769-f570-43dd-b5bf-eea3efd38f0a",
                      "name": "client-request-id",
                      "description": "Custom header"
                    },
                    {
                      "key": "request-id",
                      "value": "13a2a769-f570-43dd-b5bf-eea3efd38f0a",
                      "name": "request-id",
                      "description": "Custom header"
                    },
                    {
                      "key": "x-ms-ags-diagnostic",
                      "value": "{\"ServerInfo\":{\"DataCenter\":\"North Central US\",\"Slice\":\"SliceC\",\"Ring\":\"0\",\"ScaleUnit\":\"001\",\"Host\":\"AGSFE_IN_2\",\"ADSiteName\":\"NCU\"}}",
                      "name": "x-ms-ags-diagnostic",
                      "description": "Custom header"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\"@odata.context\":\"https://graph.microsoft-ppe.com/testsdsobo/$metadata#educationUser/$entity\",\"id\":\"1eccbb96-6ede-403d-aa2f-97131b5e6efb\",\"relatedContacts\":[{\"displayName\":\"TestUser G\",\"emailAddress\":\"user@outlook.com\",\"mobilePhone\":\"123-456-7890\",\"relationship\":\"parent\",\"accessConsent\":false}]}"
                }
              ]
            },
            {
              "name": "T_PostRelated",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "00fce24d-69c3-495e-8ddb-fb5c7871f92e",
                    "exec": [
                      "// Just a placeholder."
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6e95e319-cf04-4b51-9780-5bd83985c4ec",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com/get"
              },
              "response": []
            },
            {
              "name": "Delete just created Student",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b9d4805b-02e8-4c03-aaae-41ef75552617",
                    "exec": [
                      "if (typeof(GlobalFunctions) !== 'undefined' )",
                      "{",
                      "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "c52f954a-033f-4a95-b850-5919ecb929fc",
                    "exec": [
                      "var expectedSuccess = postman.getEnvironmentVariable('expectedSuccess');",
                      "if(!expectedSuccess)",
                      "{",
                      "    tests[\"Status code is 403\"] = responseCode.code === 403;",
                      "}",
                      "else",
                      "{",
                      "    tests[\"Status code is 204\"] = responseCode.code === 204;",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "e83b05cc-41b2-4904-8f31-a90da9516605",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{GraphAuth}}"
                  },
                  {
                    "key": "Workload-Authorization",
                    "value": "{{AADAuth}}",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json;odata.metadata={{MetadataLevel}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{https}}://{{host}}/{{graphVersion}}/education/users/{{justCreatedId}}"
              },
              "response": []
            }
          ],
          "id": "69660e9a-3e65-4405-bac9-42fbc484bda7"
        }
      ],
      "id": "66537159-9385-416e-a89e-b858a0e64f4a"
    },
    {
      "name": "FINAL TEST",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// The Sole purpose of this FINAL TEST is to reset the environment variable Metadata level to minimal",
              "// Keep it as the last test in any run.",
              "postman.setEnvironmentVariable(\"MetadataLevel\", \"minimal\");",
              "postman.setEnvironmentVariable('expectedSuccess', true);",
              "postman.setNextRequest(null);",
              ""
            ]
          }
        }
      ],
      "id": "42bb7e6b-6e54-5cc1-a958-d4188670e593",
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "https://postman-echo.com/get"
      },
      "response": []
    },
    {
      "name": "Delay",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d1f2d475-8218-4b8e-9bac-f560c139b1e2",
            "exec": [
              "if (responseCode.code !== 200)",
              "{",
              "    tests[\"Status code is 200\"] = responseCode.code === 200;",
              "}",
              "postman.setNextRequest(postman.getEnvironmentVariable(\"returnRequest\"));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "71c11018-bf01-4d70-9158-18be452ba04d",
            "exec": [
              "// Delay to make sure propagation happens",
              "//setTimeout(function(err, res) {console.log(\"10s delay\");}, 10);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "f0683698-ab2e-4c94-91ea-5cf867d26c2a",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": "https://postman-echo.com/delay/10",
        "description": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server."
      },
      "response": []
    },
    {
      "name": "CLEANUP GetDeleteSchoolList",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "15681a8b-2401-440c-af86-f8956b4c1e7b",
            "exec": [
              "if (typeof(GlobalFunctions) !== 'undefined' )",
              "{",
              "    GlobalFunctions.setupMetadataLevel(iteration, postman);",
              "}"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "c1f6deda-c89d-42b6-8047-002ad295005b",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (responseBody.has('\"id\":'))",
              "{",
              "    var jsonData = JSON.parse(responseBody);",
              "    var i;",
              "    var handler = function (err, res) {",
              "             console.log(err ? err : res.code);",
              "        };",
              "    var d=0;",
              "    for (i=0; i < jsonData.value.length; i++)",
              "    {",
              "        if (jsonData.value[i].displayName.includes('SchoolTestRun'))",
              "        {",
              "            d++;",
              "            var url = postman.getEnvironmentVariable('https') + '://' +",
              "            postman.getEnvironmentVariable('host') + '/' +",
              "            'beta/education/schools/' +",
              "            jsonData.value[i].id;",
              "        ",
              "            var echoPostRequest = {",
              "              url: url,",
              "              method: 'DELETE',",
              "              header: 'Authorization: ' + postman.getEnvironmentVariable('GraphAuth'),",
              "              };",
              "",
              "            pm.sendRequest(echoPostRequest, handler);",
              "            tests['DELETE ' + url] = true;",
              "        }",
              "    }",
              "    tests['Rows deleted = ' + d] = true;",
              "    ",
              "}",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "8e4fb435-d761-4699-98a9-8550b25d347a",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "{{GraphAuth}}"
          },
          {
            "key": "Workload-Authorization",
            "value": "{{AADAuth}}",
            "disabled": true
          },
          {
            "key": "Accept",
            "value": "application/json;odata.metadata={{MetadataLevel}}"
          }
        ],
        "url": "{{https}}://{{host}}/beta/education/schools"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "ec1bde02-516d-4fe0-8cf2-3de18601daa8",
        "type": "text/javascript",
        "exec": [
          "pm.request.headers.add({key: 'Connection', value: 'close' });"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "fcad2614-5a03-4ccb-bdcd-a6bdf320c6d3",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "1b58e1a6-1a72-43e9-82d0-bd2b22354427",
      "key": "PostmanAPIKey",
      "value": "3bce6780829b4d7fa2f9906793822c6e"
    }
  ]
}